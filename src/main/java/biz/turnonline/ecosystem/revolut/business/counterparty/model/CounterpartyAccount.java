/*
 * Revolut for Business OpenAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package biz.turnonline.ecosystem.revolut.business.counterparty.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;
import java.util.UUID;

/**
 * CounterpartyAccount
 */
@JsonPropertyOrder( {
        CounterpartyAccount.JSON_PROPERTY_ID,
        CounterpartyAccount.JSON_PROPERTY_NAME,
        CounterpartyAccount.JSON_PROPERTY_EMAIL,
        CounterpartyAccount.JSON_PROPERTY_BANK_COUNTRY,
        CounterpartyAccount.JSON_PROPERTY_CURRENCY,
        CounterpartyAccount.JSON_PROPERTY_TYPE,
        CounterpartyAccount.JSON_PROPERTY_ACCOUNT_NO,
        CounterpartyAccount.JSON_PROPERTY_IBAN,
        CounterpartyAccount.JSON_PROPERTY_SORT_CODE,
        CounterpartyAccount.JSON_PROPERTY_ROUTING_NUMBER,
        CounterpartyAccount.JSON_PROPERTY_BIC,
        CounterpartyAccount.JSON_PROPERTY_CLABE,
        CounterpartyAccount.JSON_PROPERTY_RECIPIENT_CHARGES
} )
@javax.annotation.Generated( value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-23T19:47:41.366+01:00[Europe/Bratislava]" )
public class CounterpartyAccount
{
    public static final String JSON_PROPERTY_ID = "id";

    public static final String JSON_PROPERTY_NAME = "name";

    public static final String JSON_PROPERTY_EMAIL = "email";

    public static final String JSON_PROPERTY_BANK_COUNTRY = "bank_country";

    public static final String JSON_PROPERTY_CURRENCY = "currency";

    public static final String JSON_PROPERTY_TYPE = "type";

    public static final String JSON_PROPERTY_ACCOUNT_NO = "account_no";

    public static final String JSON_PROPERTY_IBAN = "iban";

    public static final String JSON_PROPERTY_SORT_CODE = "sort_code";

    public static final String JSON_PROPERTY_ROUTING_NUMBER = "routing_number";

    public static final String JSON_PROPERTY_BIC = "bic";

    public static final String JSON_PROPERTY_CLABE = "clabe";

    public static final String JSON_PROPERTY_RECIPIENT_CHARGES = "recipient_charges";

    private UUID id;

    private String name;

    private String email;

    private String bankCountry;

    private String currency;

    private TypeEnum type;

    private String accountNo;

    private String iban;

    private String sortCode;

    private String routingNumber;

    private String bic;

    private String clabe;

    private RecipientChargesEnum recipientCharges;

    public CounterpartyAccount id( UUID id )
    {

        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     **/
    @ApiModelProperty( required = true, value = "" )
    @JsonProperty( JSON_PROPERTY_ID )
    @JsonInclude( value = JsonInclude.Include.ALWAYS )

    public UUID getId()
    {
        return id;
    }

    public void setId( UUID id )
    {
        this.id = id;
    }

    public CounterpartyAccount name( String name )
    {

        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_NAME )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getName()
    {
        return name;
    }

    public void setName( String name )
    {
        this.name = name;
    }

    public CounterpartyAccount email( String email )
    {

        this.email = email;
        return this;
    }

    /**
     * Get email
     *
     * @return email
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_EMAIL )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getEmail()
    {
        return email;
    }

    public void setEmail( String email )
    {
        this.email = email;
    }

    public CounterpartyAccount bankCountry( String bankCountry )
    {

        this.bankCountry = bankCountry;
        return this;
    }

    /**
     * Get bankCountry
     *
     * @return bankCountry
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_BANK_COUNTRY )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getBankCountry()
    {
        return bankCountry;
    }

    public void setBankCountry( String bankCountry )
    {
        this.bankCountry = bankCountry;
    }

    public CounterpartyAccount currency( String currency )
    {

        this.currency = currency;
        return this;
    }

    /**
     * Get currency
     *
     * @return currency
     **/
    @ApiModelProperty( required = true, value = "" )
    @JsonProperty( JSON_PROPERTY_CURRENCY )
    @JsonInclude( value = JsonInclude.Include.ALWAYS )

    public String getCurrency()
    {
        return currency;
    }

    public void setCurrency( String currency )
    {
        this.currency = currency;
    }

    public CounterpartyAccount type( TypeEnum type )
    {

        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     **/
    @ApiModelProperty( required = true, value = "" )
    @JsonProperty( JSON_PROPERTY_TYPE )
    @JsonInclude( value = JsonInclude.Include.ALWAYS )

    public TypeEnum getType()
    {
        return type;
    }

    public void setType( TypeEnum type )
    {
        this.type = type;
    }

    public CounterpartyAccount accountNo( String accountNo )
    {

        this.accountNo = accountNo;
        return this;
    }

    /**
     * Get accountNo
     *
     * @return accountNo
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_ACCOUNT_NO )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getAccountNo()
    {
        return accountNo;
    }

    public void setAccountNo( String accountNo )
    {
        this.accountNo = accountNo;
    }

    public CounterpartyAccount iban( String iban )
    {

        this.iban = iban;
        return this;
    }

    /**
     * Get iban
     *
     * @return iban
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_IBAN )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getIban()
    {
        return iban;
    }

    public void setIban( String iban )
    {
        this.iban = iban;
    }

    public CounterpartyAccount sortCode( String sortCode )
    {

        this.sortCode = sortCode;
        return this;
    }

    /**
     * Get sortCode
     *
     * @return sortCode
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_SORT_CODE )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getSortCode()
    {
        return sortCode;
    }

    public void setSortCode( String sortCode )
    {
        this.sortCode = sortCode;
    }

    public CounterpartyAccount routingNumber( String routingNumber )
    {

        this.routingNumber = routingNumber;
        return this;
    }

    /**
     * Get routingNumber
     *
     * @return routingNumber
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_ROUTING_NUMBER )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getRoutingNumber()
    {
        return routingNumber;
    }

    public void setRoutingNumber( String routingNumber )
    {
        this.routingNumber = routingNumber;
    }

    public CounterpartyAccount bic( String bic )
    {

        this.bic = bic;
        return this;
    }

    /**
     * Get bic
     *
     * @return bic
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_BIC )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getBic()
    {
        return bic;
    }

    public void setBic( String bic )
    {
        this.bic = bic;
    }

    public CounterpartyAccount clabe( String clabe )
    {

        this.clabe = clabe;
        return this;
    }

    /**
     * Get clabe
     *
     * @return clabe
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_CLABE )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public String getClabe()
    {
        return clabe;
    }

    public void setClabe( String clabe )
    {
        this.clabe = clabe;
    }

    public CounterpartyAccount recipientCharges( RecipientChargesEnum recipientCharges )
    {

        this.recipientCharges = recipientCharges;
        return this;
    }

    /**
     * Get recipientCharges
     *
     * @return recipientCharges
     **/
    @javax.annotation.Nullable
    @ApiModelProperty( value = "" )
    @JsonProperty( JSON_PROPERTY_RECIPIENT_CHARGES )
    @JsonInclude( value = JsonInclude.Include.USE_DEFAULTS )

    public RecipientChargesEnum getRecipientCharges()
    {
        return recipientCharges;
    }

    public void setRecipientCharges( RecipientChargesEnum recipientCharges )
    {
        this.recipientCharges = recipientCharges;
    }

    @Override
    public boolean equals( java.lang.Object o )
    {
        if ( this == o )
        {
            return true;
        }
        if ( o == null || getClass() != o.getClass() )
        {
            return false;
        }
        CounterpartyAccount counterpartyAccount = ( CounterpartyAccount ) o;
        return Objects.equals( this.id, counterpartyAccount.id ) &&
                Objects.equals( this.name, counterpartyAccount.name ) &&
                Objects.equals( this.email, counterpartyAccount.email ) &&
                Objects.equals( this.bankCountry, counterpartyAccount.bankCountry ) &&
                Objects.equals( this.currency, counterpartyAccount.currency ) &&
                Objects.equals( this.type, counterpartyAccount.type ) &&
                Objects.equals( this.accountNo, counterpartyAccount.accountNo ) &&
                Objects.equals( this.iban, counterpartyAccount.iban ) &&
                Objects.equals( this.sortCode, counterpartyAccount.sortCode ) &&
                Objects.equals( this.routingNumber, counterpartyAccount.routingNumber ) &&
                Objects.equals( this.bic, counterpartyAccount.bic ) &&
                Objects.equals( this.clabe, counterpartyAccount.clabe ) &&
                Objects.equals( this.recipientCharges, counterpartyAccount.recipientCharges );
    }

    @Override
    public int hashCode()
    {
        return Objects.hash( id, name, email, bankCountry, currency, type, accountNo, iban, sortCode, routingNumber, bic, clabe, recipientCharges );
    }

    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append( "class CounterpartyAccount {\n" );
        sb.append( "    id: " ).append( toIndentedString( id ) ).append( "\n" );
        sb.append( "    name: " ).append( toIndentedString( name ) ).append( "\n" );
        sb.append( "    email: " ).append( toIndentedString( email ) ).append( "\n" );
        sb.append( "    bankCountry: " ).append( toIndentedString( bankCountry ) ).append( "\n" );
        sb.append( "    currency: " ).append( toIndentedString( currency ) ).append( "\n" );
        sb.append( "    type: " ).append( toIndentedString( type ) ).append( "\n" );
        sb.append( "    accountNo: " ).append( toIndentedString( accountNo ) ).append( "\n" );
        sb.append( "    iban: " ).append( toIndentedString( iban ) ).append( "\n" );
        sb.append( "    sortCode: " ).append( toIndentedString( sortCode ) ).append( "\n" );
        sb.append( "    routingNumber: " ).append( toIndentedString( routingNumber ) ).append( "\n" );
        sb.append( "    bic: " ).append( toIndentedString( bic ) ).append( "\n" );
        sb.append( "    clabe: " ).append( toIndentedString( clabe ) ).append( "\n" );
        sb.append( "    recipientCharges: " ).append( toIndentedString( recipientCharges ) ).append( "\n" );
        sb.append( "}" );
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString( java.lang.Object o )
    {
        if ( o == null )
        {
            return "null";
        }
        return o.toString().replace( "\n", "\n    " );
    }


    /**
     * Gets or Sets type
     */
    public enum TypeEnum
    {
        REVOLUT( "revolut" ),

        EXTERNAL( "external" );

        private String value;

        TypeEnum( String value )
        {
            this.value = value;
        }

        @JsonCreator
        public static TypeEnum fromValue( String value )
        {
            for ( TypeEnum b : TypeEnum.values() )
            {
                if ( b.value.equals( value ) )
                {
                    return b;
                }
            }
            throw new IllegalArgumentException( "Unexpected value '" + value + "'" );
        }

        @JsonValue
        public String getValue()
        {
            return value;
        }

        @Override
        public String toString()
        {
            return String.valueOf( value );
        }
    }

    /**
     * Gets or Sets recipientCharges
     */
    public enum RecipientChargesEnum
    {
        NO( "no" ),

        EXPECTED( "expected" );

        private String value;

        RecipientChargesEnum( String value )
        {
            this.value = value;
        }

        @JsonCreator
        public static RecipientChargesEnum fromValue( String value )
        {
            for ( RecipientChargesEnum b : RecipientChargesEnum.values() )
            {
                if ( b.value.equals( value ) )
                {
                    return b;
                }
            }
            throw new IllegalArgumentException( "Unexpected value '" + value + "'" );
        }

        @JsonValue
        public String getValue()
        {
            return value;
        }

        @Override
        public String toString()
        {
            return String.valueOf( value );
        }
    }

}

